{"remainingRequest":"/Users/wanmenghui/Desktop/base_project/node_modules/babel-loader/lib/index.js!/Users/wanmenghui/Desktop/base_project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wanmenghui/Desktop/base_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wanmenghui/Desktop/base_project/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wanmenghui/Desktop/base_project/src/App.vue","mtime":1657720678874},{"path":"/Users/wanmenghui/Desktop/base_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wanmenghui/Desktop/base_project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wanmenghui/Desktop/base_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wanmenghui/Desktop/base_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEluZGV4IGZyb20gJy4vY29tcG9uZW50cy9JbmRleC52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czogewogICAgSW5kZXg6IEluZGV4CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXR0cmlidXRlOiB7CiAgICAgICAgYmFja2dyb3VuZEltYWdlOiAidXJsKCIgKyByZXF1aXJlKCIuLi9wdWJsaWMvYmcuanBnIikgKyAiKSIsCiAgICAgICAgYmFja2dyb3VuZFJlcGVhdDogIm5vLXJlcGVhdCIsCiAgICAgICAgYmFja2dyb3VuZFNpemU6ICIxMDAlIDEwMCUiLAogICAgICAgIHdpZHRoOiAiMTAwJSIKICAgICAgfSwKICAgICAgamF2YVRhYmxlRGF0YTogW3sKICAgICAgICBpZDogIiIsCiAgICAgICAgc3RhY2s6ICcnCiAgICAgIH1dLAogICAgICBzcWxUYWJsZURhdGE6IFt7CiAgICAgICAgaWQ6ICIiLAogICAgICAgIHNxbENvbnRlbnQ6ICIiLAogICAgICAgIHJlc3VsdE51bWJlcjogJycKICAgICAgfV0sCiAgICAgIGJlZ2luVGltZTogIiIsCiAgICAgIGVuZFRpbWU6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcXVlcnlNdWNoOiBmdW5jdGlvbiBxdWVyeU11Y2goKSB7CiAgICAgIHRoaXMuYXhpb3MoewogICAgICAgIHVybDogJy9xdWVyeU11Y2gnLAogICAgICAgIG1ldGhvZDogJ3Bvc3QnCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGFsZXJ0KCLmn6Xor6LmiJDlip8iKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHsKICAgICAgdGhpcy5heGlvcyh7CiAgICAgICAgdXJsOiAnL3VwZGF0ZScsCiAgICAgICAgbWV0aG9kOiAncG9zdCcKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgYWxlcnQoIuabtOaWsOaIkOWKnyIpOwogICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgIH0pOwogICAgfSwKICAgIGJlZ2luOiBmdW5jdGlvbiBiZWdpbigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5heGlvcyh7CiAgICAgICAgdXJsOiAnL2JlZ2luJywKICAgICAgICBtZXRob2Q6ICdwb3N0JwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5iZWdpblRpbWUgPSBfdGhpczIuZGF0ZUZ0dCgieXl5eS1NTS1kZCBoaDptbTpzcyIsIG5ldyBEYXRlKCkpOwogICAgICAgIGFsZXJ0KCLlvIDlp4vlvZXliLbjgILjgILjgILjgILjgILjgIIiKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICB9KTsKICAgIH0sCiAgICBlbmQ6IGZ1bmN0aW9uIGVuZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuYXhpb3MoewogICAgICAgIHVybDogJy9lbmQnLAogICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBiZWdpblRpbWU6IHRoaXMuYmVnaW5UaW1lLAogICAgICAgICAgZW5kVGltZTogdGhpcy5kYXRlRnR0KCJ5eXl5LU1NLWRkIGhoOm1tOnNzIiwgbmV3IERhdGUoKSksCiAgICAgICAgICB1c2VySWQ6ICJhYmMxMTEiCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBjb25zb2xlLmxvZygi57uT5p2f5b2V5Yi26L+U5Zue5pWw5o2u77yaICIgKyByZXMpOwoKICAgICAgICBmb3IgKHZhciBrZXkgaW4gcmVzLmRhdGEpIHsKICAgICAgICAgIGlmIChrZXkgPT0gMCkgewogICAgICAgICAgICB2YXIgdGVtcERhdGEgPSByZXMuZGF0YVtrZXldOwogICAgICAgICAgICBjb25zb2xlLmxvZygiYWFhYWFhIiArIHRlbXBEYXRhKTsKICAgICAgICAgICAgdGVtcERhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGl0ZW0pOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVtcERhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICB2YXIgb2JqID0gewogICAgICAgICAgICAgICAgaWQ6IHRlbXBEYXRhW2ldLmlkLAogICAgICAgICAgICAgICAgc3RhY2s6IHRlbXBEYXRhW2ldLnN0YWNrCiAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgX3RoaXMuamF2YVRhYmxlRGF0YS5wdXNoKG9iaik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSBpZiAoa2V5ID09IDEpIHsKICAgICAgICAgICAgdmFyIF90ZW1wRGF0YSA9IHJlcy5kYXRhW2tleV07CgogICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IF90ZW1wRGF0YS5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgIHZhciBvYmoyID0gewogICAgICAgICAgICAgICAgaWQ6IF90ZW1wRGF0YVtqXS5pZCwKICAgICAgICAgICAgICAgIHNxbENvbnRlbnQ6IF90ZW1wRGF0YVtqXS5zcWxDb250ZW50LAogICAgICAgICAgICAgICAgcmVzdWx0TnVtYmVyOiBfdGVtcERhdGFbal0ucmVzdWx0TnVtYmVyCiAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgX3RoaXMuc3FsVGFibGVEYXRhLnB1c2gob2JqMik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGFsZXJ0KCLnu5PmnZ/lvZXliLbjgILjgILjgILjgILjgILjgIIiKTsKICAgICAgfSk7CiAgICB9LAogICAgZGF0ZUZ0dDogZnVuY3Rpb24gZGF0ZUZ0dChmbXQsIGRhdGUpIHsKICAgICAgdmFyIG8gPSB7CiAgICAgICAgIk0rIjogZGF0ZS5nZXRNb250aCgpICsgMSwKICAgICAgICAvL+aciOS7vQogICAgICAgICJkKyI6IGRhdGUuZ2V0RGF0ZSgpLAogICAgICAgIC8v5pelCiAgICAgICAgImgrIjogZGF0ZS5nZXRIb3VycygpLAogICAgICAgIC8v5bCP5pe2CiAgICAgICAgIm0rIjogZGF0ZS5nZXRNaW51dGVzKCksCiAgICAgICAgLy/liIYKICAgICAgICAicysiOiBkYXRlLmdldFNlY29uZHMoKSwKICAgICAgICAvL+enkgogICAgICAgICJxKyI6IE1hdGguZmxvb3IoKGRhdGUuZ2V0TW9udGgoKSArIDMpIC8gMyksCiAgICAgICAgLy/lraPluqYKICAgICAgICAiUyI6IGRhdGUuZ2V0TWlsbGlzZWNvbmRzKCkgLy/mr6vnp5IKCiAgICAgIH07CiAgICAgIGlmICgvKHkrKS8udGVzdChmbXQpKSBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsIChkYXRlLmdldEZ1bGxZZWFyKCkgKyAiIikuc3Vic3RyKDQgLSBSZWdFeHAuJDEubGVuZ3RoKSk7CgogICAgICBmb3IgKHZhciBrIGluIG8pIHsKICAgICAgICBpZiAobmV3IFJlZ0V4cCgiKCIgKyBrICsgIikiKS50ZXN0KGZtdCkpIGZtdCA9IGZtdC5yZXBsYWNlKFJlZ0V4cC4kMSwgUmVnRXhwLiQxLmxlbmd0aCA9PSAxID8gb1trXSA6ICgiMDAiICsgb1trXSkuc3Vic3RyKCgiIiArIG9ba10pLmxlbmd0aCkpOwogICAgICB9CgogICAgICByZXR1cm4gZm10OwogICAgfQogIH0gLy8gdXBkYXRlZCgpewogIC8vICAgbGV0IHVzZXJuYW1lID0gdGhpcy4kc2Vzc2lvbi5nZXQoInVzZXJuYW1lIik7CiAgLy8gICBpZih0aGlzLiRzZXNzaW9uLmdldCh1c2VybmFtZSsiaXNMb2dpbiIpKSB7CiAgLy8gICAgICAgdGhpcy5pc1Nob3dMb2dvdXQgPSB0cnVlOwogIC8vICAgICAgIHRoaXMuaXNTaG93ICA9IGZhbHNlOwogIC8vICAgfWVsc2V7CiAgLy8gICAgIHRoaXMuaXNTaG93TG9nb3V0ID0gZmFsc2U7CiAgLy8gICAgIHRoaXMuaXNTaG93ID0gdHJ1ZTsKICAvLyAgIH0KICAvLyB9LAoKfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\" :style=\"attribute\">\n    <index></index>\n    <div>\n      <router-view></router-view>\n    </div>\n\n    <!-- 测试代码begin -->\n    <el-button type=\"primary\" @click=\"queryMuch\">查询</el-button>\n\n    <el-button type=\"primary\" @click=\"update\">修改</el-button>\n\n    <el-button type=\"danger\" plain @click=\"begin\">开始录制</el-button>\n\n    <el-button type=\"danger\" plain @click=\"end\">结束录制</el-button>\n\n    \n\n\n    <h3>sql信息</h3>\n    <el-table\n      :data=\"sqlTableData\"\n      style=\"width: 100%\">\n      <el-table-column\n        prop=\"id\"\n        label=\"id\"\n        width=\"180\">\n      </el-table-column>\n      <el-table-column\n        prop=\"sqlContent\"\n        label=\"sql信息\"\n        width=\"1200\">\n      </el-table-column>\n      <el-table-column\n        prop=\"resultNumber\"\n        label=\"结果集\">\n      </el-table-column>\n    </el-table>\n\n\n    <h3>java堆栈信息</h3>\n    <el-table\n      :data=\"javaTableData\"\n      class=\"test\">\n      <el-table-column\n        prop=\"id\"\n        label=\"id\"\n        width=\"180\">\n      </el-table-column>\n      <el-table-column\n        prop=\"stack\"\n        label=\"堆栈信息\"\n        width=\"1200\">\n      </el-table-column>\n      <el-table-column\n        prop=\"resultNumber\"\n        label=\"结果集\">\n      </el-table-column>\n    </el-table>\n\n    <!-- 测试代码end -->\n\n  </div>\n</template>\n\n<script>\nimport Index from './components/Index.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    Index\n  },\n  data(){\n    return{\n      attribute: {\n        backgroundImage: \"url(\" + require(\"../public/bg.jpg\") + \")\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"100% 100%\",\n        width: \"100%\",\n      },\n      javaTableData: [{\n            id: \"\",\n            stack: ''\n          }],\n      sqlTableData: [{\n          id: \"\",\n          sqlContent: \"\",\n          resultNumber: ''\n      }],    \n       beginTime: \"\",\n       endTime: \"\"   \n    }\n  },\n  methods: {\n    queryMuch(){\n      this.axios({\n            url: '/queryMuch',   \n            method: 'post'      \n        }).then(res => {\n          alert(\"查询成功\");\n          console.log(res);\n        })\n    },\n    update() {\n      this.axios({\n            url: '/update',   \n            method: 'post'      \n        }).then(res => {\n          alert(\"更新成功\");\n          console.log(res);\n        })\n    },\n    begin() {\n      let _this = this;\n      this.axios({\n            url: '/begin',   \n            method: 'post'      \n        }).then(res => {\n          _this.beginTime = this.dateFtt(\"yyyy-MM-dd hh:mm:ss\",new Date());\n          alert(\"开始录制。。。。。。\");\n          console.log(res);\n        })\n    },\n    end() {\n      let _this = this;\n      this.axios({\n            url: '/end',   \n            method: 'get',\n            params: {              \n              beginTime: this.beginTime,\n              endTime: this.dateFtt(\"yyyy-MM-dd hh:mm:ss\",new Date()),\n              userId: \"abc111\"\n            }     \n        }).then(res => {\n          console.log(\"结束录制返回数据： \" + res)\n          for(var key in res.data) {\n            if(key == 0) {\n              let tempData = res.data[key];\n\n              console.log(\"aaaaaa\"+tempData);\n\n\n              tempData.forEach(item => {\n                console.log(item);\n              })\n\n\n              for(var i = 0; i < tempData.length; i++){\n                let obj = {\n                  id: tempData[i].id,\n                  stack: tempData[i].stack\n                };\n                _this.javaTableData.push(obj);\n              }\n            }else if(key == 1) {\n              let tempData = res.data[key];\n                for(var j = 0; j < tempData.length; j++){\n                let obj2 = {\n                  id: tempData[j].id,\n                  sqlContent: tempData[j].sqlContent,\n                  resultNumber: tempData[j].resultNumber\n                };\n                _this.sqlTableData.push(obj2);\n              }\n            }\n          }\n          alert(\"结束录制。。。。。。\");\n        })\n    },\n    dateFtt(fmt, date) { \n      var o = {\n          \"M+\": date.getMonth() + 1,     //月份\n          \"d+\": date.getDate(),     //日\n          \"h+\": date.getHours(),     //小时\n          \"m+\": date.getMinutes(),     //分\n          \"s+\": date.getSeconds(),     //秒\n          \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\n          \"S\": date.getMilliseconds()    //毫秒\n      };\n      if (/(y+)/.test(fmt))\n          fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n      for (var k in o)\n          if (new RegExp(\"(\" + k + \")\").test(fmt))\n              fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n      return fmt;\n    }\n  }\n  // updated(){\n  //   let username = this.$session.get(\"username\");\n  //   if(this.$session.get(username+\"isLogin\")) {\n  //       this.isShowLogout = true;\n  //       this.isShow  = false;\n  //   }else{\n  //     this.isShowLogout = false;\n  //     this.isShow = true;\n  //   }\n  // },\n \n}\n\n\n\n</script>\n\n<style>\n  .container {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n\n    background-image: '../public/bg.jpg' !important;\n  }\n  /deep/ .cell {\n    height: 100%;\n  }\n  .test {\n    height: 100% !important\n  }\n</style>"],"sourceRoot":"src"}]}